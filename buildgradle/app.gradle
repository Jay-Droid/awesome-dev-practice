//****************************************
//********  调试壳公共gradle配置  **********
//****************************************
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    //模块中启用ViewBinding
    //谷歌在 Android Studio 3.6 Canary 11 及更高版本中加入了新的视图绑定工具 ViewBinding。
    viewBinding {
        enabled = true
    }
    dataBinding {
        enabled = true
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.targetSdk
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        //Instrumentation Test class
        testInstrumentationRunner rootProject.ext.androidJUnitRunner
        applicationId "com.component.${project.name.toLowerCase().replaceAll("-", "_")}"
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
        // Bugtags Crash收集
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'armeabi-v7a'// 'x86', 'mips', 'x86_64', 'arm64-v8a'
        }

        /* Enabling multidex support.当DEX中的方法数超过最大值65536时,需要使用,否则打包apk会失败*/
        multiDexEnabled true

    }

    signingConfigs {

        debug {
            keyAlias rootProject.ext.sign["aliasDebug"]
            keyPassword rootProject.ext.sign["passDebug"]
            storeFile rootProject.ext.sign["storeDebug"]
            storePassword rootProject.ext.sign["storePassDebug"]
        }
        release {
            keyAlias rootProject.ext.sign["alias"]
            keyPassword rootProject.ext.sign["pass"]
            storeFile rootProject.ext.sign["store"]
            storePassword rootProject.ext.sign["storePass"]
        }
    }

    buildTypes {
        //打包命令：
        // ./gradlew :app:wan:assembleDebug
        // ./gradlew :app:wan:assembleRelease

        debug {
            // Zipalign优化 true
            zipAlignEnabled false
            // 移除无用的resource文件 true
            shrinkResources false
            // 启用Android插件压缩器
            // useProguard true
            // 代码压缩/是否进行混淆 true
            minifyEnabled false
            // 签名信息
            signingConfig signingConfigs.debug
            // 前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明,后一部分是我们项目里的自定义的混淆文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
        release {
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            // 代码压缩/是否进行混淆
            minifyEnabled true
            // 签名信息
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }


    //解决主工程和组件的 AndroidManifest 文件合并问题
    sourceSets {
        main {
            manifest.srcFile './AndroidManifest.xml'
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.appcompat
    implementation rootProject.ext.coreKtx


}
